// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.11.4
// source: image/rpc/image.proto

package rpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ContainerImageType int32

const (
	ContainerImageType_OFFICIAL     ContainerImageType = 0
	ContainerImageType_FUN_OFFICIAL ContainerImageType = 1
	ContainerImageType_CUSTOM       ContainerImageType = 2
)

// Enum value maps for ContainerImageType.
var (
	ContainerImageType_name = map[int32]string{
		0: "OFFICIAL",
		1: "FUN_OFFICIAL",
		2: "CUSTOM",
	}
	ContainerImageType_value = map[string]int32{
		"OFFICIAL":     0,
		"FUN_OFFICIAL": 1,
		"CUSTOM":       2,
	}
)

func (x ContainerImageType) Enum() *ContainerImageType {
	p := new(ContainerImageType)
	*p = x
	return p
}

func (x ContainerImageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerImageType) Descriptor() protoreflect.EnumDescriptor {
	return file_image_rpc_image_proto_enumTypes[0].Descriptor()
}

func (ContainerImageType) Type() protoreflect.EnumType {
	return &file_image_rpc_image_proto_enumTypes[0]
}

func (x ContainerImageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerImageType.Descriptor instead.
func (ContainerImageType) EnumDescriptor() ([]byte, []int) {
	return file_image_rpc_image_proto_rawDescGZIP(), []int{0}
}

type ContainerImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string             `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ImageType   ContainerImageType `protobuf:"varint,4,opt,name=image_type,json=imageType,proto3,enum=rpc.ContainerImageType" json:"image_type,omitempty"`
}

func (x *ContainerImage) Reset() {
	*x = ContainerImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_image_rpc_image_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerImage) ProtoMessage() {}

func (x *ContainerImage) ProtoReflect() protoreflect.Message {
	mi := &file_image_rpc_image_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerImage.ProtoReflect.Descriptor instead.
func (*ContainerImage) Descriptor() ([]byte, []int) {
	return file_image_rpc_image_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerImage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerImage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerImage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ContainerImage) GetImageType() ContainerImageType {
	if x != nil {
		return x.ImageType
	}
	return ContainerImageType_OFFICIAL
}

// POST
type CreateContainerImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedirectUrl string `protobuf:"bytes,1,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *CreateContainerImageResponse) Reset() {
	*x = CreateContainerImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_image_rpc_image_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerImageResponse) ProtoMessage() {}

func (x *CreateContainerImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_rpc_image_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerImageResponse.ProtoReflect.Descriptor instead.
func (*CreateContainerImageResponse) Descriptor() ([]byte, []int) {
	return file_image_rpc_image_proto_rawDescGZIP(), []int{1}
}

func (x *CreateContainerImageResponse) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

// GET
type ListContainerImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerImages []*ContainerImage `protobuf:"bytes,1,rep,name=container_images,json=containerImages,proto3" json:"container_images,omitempty"`
}

func (x *ListContainerImageResponse) Reset() {
	*x = ListContainerImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_image_rpc_image_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContainerImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainerImageResponse) ProtoMessage() {}

func (x *ListContainerImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_rpc_image_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainerImageResponse.ProtoReflect.Descriptor instead.
func (*ListContainerImageResponse) Descriptor() ([]byte, []int) {
	return file_image_rpc_image_proto_rawDescGZIP(), []int{2}
}

func (x *ListContainerImageResponse) GetContainerImages() []*ContainerImage {
	if x != nil {
		return x.ContainerImages
	}
	return nil
}

// DELETE
type DeleteContainerImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerImageName string `protobuf:"bytes,1,opt,name=container_image_name,json=containerImageName,proto3" json:"container_image_name,omitempty"`
}

func (x *DeleteContainerImageRequest) Reset() {
	*x = DeleteContainerImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_image_rpc_image_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContainerImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContainerImageRequest) ProtoMessage() {}

func (x *DeleteContainerImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_rpc_image_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContainerImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteContainerImageRequest) Descriptor() ([]byte, []int) {
	return file_image_rpc_image_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteContainerImageRequest) GetContainerImageName() string {
	if x != nil {
		return x.ContainerImageName
	}
	return ""
}

var File_image_rpc_image_proto protoreflect.FileDescriptor

var file_image_rpc_image_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x5c, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x2a, 0x40, 0x0a, 0x12, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x46, 0x46, 0x49, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x46, 0x55, 0x4e, 0x5f, 0x4f, 0x46, 0x46, 0x49, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x32, 0xbe, 0x02, 0x0a,
	0x15, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x5d, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x42, 0x0b, 0x5a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_image_rpc_image_proto_rawDescOnce sync.Once
	file_image_rpc_image_proto_rawDescData = file_image_rpc_image_proto_rawDesc
)

func file_image_rpc_image_proto_rawDescGZIP() []byte {
	file_image_rpc_image_proto_rawDescOnce.Do(func() {
		file_image_rpc_image_proto_rawDescData = protoimpl.X.CompressGZIP(file_image_rpc_image_proto_rawDescData)
	})
	return file_image_rpc_image_proto_rawDescData
}

var file_image_rpc_image_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_image_rpc_image_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_image_rpc_image_proto_goTypes = []interface{}{
	(ContainerImageType)(0),              // 0: rpc.ContainerImageType
	(*ContainerImage)(nil),               // 1: rpc.ContainerImage
	(*CreateContainerImageResponse)(nil), // 2: rpc.CreateContainerImageResponse
	(*ListContainerImageResponse)(nil),   // 3: rpc.ListContainerImageResponse
	(*DeleteContainerImageRequest)(nil),  // 4: rpc.DeleteContainerImageRequest
	(*empty.Empty)(nil),                  // 5: google.protobuf.Empty
}
var file_image_rpc_image_proto_depIdxs = []int32{
	0, // 0: rpc.ContainerImage.image_type:type_name -> rpc.ContainerImageType
	1, // 1: rpc.ListContainerImageResponse.container_images:type_name -> rpc.ContainerImage
	5, // 2: rpc.ContainerImageService.Create:input_type -> google.protobuf.Empty
	5, // 3: rpc.ContainerImageService.List:input_type -> google.protobuf.Empty
	4, // 4: rpc.ContainerImageService.Delete:input_type -> rpc.DeleteContainerImageRequest
	2, // 5: rpc.ContainerImageService.Create:output_type -> rpc.CreateContainerImageResponse
	3, // 6: rpc.ContainerImageService.List:output_type -> rpc.ListContainerImageResponse
	5, // 7: rpc.ContainerImageService.Delete:output_type -> google.protobuf.Empty
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_image_rpc_image_proto_init() }
func file_image_rpc_image_proto_init() {
	if File_image_rpc_image_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_image_rpc_image_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_image_rpc_image_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_image_rpc_image_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContainerImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_image_rpc_image_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContainerImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_image_rpc_image_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_image_rpc_image_proto_goTypes,
		DependencyIndexes: file_image_rpc_image_proto_depIdxs,
		EnumInfos:         file_image_rpc_image_proto_enumTypes,
		MessageInfos:      file_image_rpc_image_proto_msgTypes,
	}.Build()
	File_image_rpc_image_proto = out.File
	file_image_rpc_image_proto_rawDesc = nil
	file_image_rpc_image_proto_goTypes = nil
	file_image_rpc_image_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ContainerImageServiceClient is the client API for ContainerImageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContainerImageServiceClient interface {
	Create(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CreateContainerImageResponse, error)
	List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListContainerImageResponse, error)
	//rpc UpdateContainer(google.protobuf.Empty) returns (google.protobuf.Empty) {}
	Delete(ctx context.Context, in *DeleteContainerImageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type containerImageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewContainerImageServiceClient(cc grpc.ClientConnInterface) ContainerImageServiceClient {
	return &containerImageServiceClient{cc}
}

func (c *containerImageServiceClient) Create(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CreateContainerImageResponse, error) {
	out := new(CreateContainerImageResponse)
	err := c.cc.Invoke(ctx, "/rpc.ContainerImageService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerImageServiceClient) List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListContainerImageResponse, error) {
	out := new(ListContainerImageResponse)
	err := c.cc.Invoke(ctx, "/rpc.ContainerImageService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerImageServiceClient) Delete(ctx context.Context, in *DeleteContainerImageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.ContainerImageService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContainerImageServiceServer is the server API for ContainerImageService service.
type ContainerImageServiceServer interface {
	Create(context.Context, *empty.Empty) (*CreateContainerImageResponse, error)
	List(context.Context, *empty.Empty) (*ListContainerImageResponse, error)
	//rpc UpdateContainer(google.protobuf.Empty) returns (google.protobuf.Empty) {}
	Delete(context.Context, *DeleteContainerImageRequest) (*empty.Empty, error)
}

// UnimplementedContainerImageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedContainerImageServiceServer struct {
}

func (*UnimplementedContainerImageServiceServer) Create(context.Context, *empty.Empty) (*CreateContainerImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedContainerImageServiceServer) List(context.Context, *empty.Empty) (*ListContainerImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedContainerImageServiceServer) Delete(context.Context, *DeleteContainerImageRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterContainerImageServiceServer(s *grpc.Server, srv ContainerImageServiceServer) {
	s.RegisterService(&_ContainerImageService_serviceDesc, srv)
}

func _ContainerImageService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerImageServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ContainerImageService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerImageServiceServer).Create(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerImageService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerImageServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ContainerImageService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerImageServiceServer).List(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerImageService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContainerImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerImageServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ContainerImageService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerImageServiceServer).Delete(ctx, req.(*DeleteContainerImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContainerImageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.ContainerImageService",
	HandlerType: (*ContainerImageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ContainerImageService_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ContainerImageService_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ContainerImageService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "image/rpc/image.proto",
}
